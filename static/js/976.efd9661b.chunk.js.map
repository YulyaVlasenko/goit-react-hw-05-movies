{"version":3,"file":"static/js/976.efd9661b.chunk.js","mappings":"oOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,I,iCCFaC,EAAOC,EAAAA,GAAAA,GAAH,8IAUJC,EAASD,EAAAA,GAAAA,EAAH,0FAMNE,EAAYF,EAAAA,GAAAA,EAAH,8C,SCqCtB,EAjDgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,MAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACHT,IAGLQ,GAAa,GFVc,SAAAR,GAC7B,OAAOL,EAAAA,EAAAA,GAAM,SAAD,OAAUK,EAAV,YAA6B,CACvCU,OAAQ,CACNC,QALU,qCAQf,CEMGC,CAAgBZ,GACba,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfV,GAAe,OAAIU,IACnBR,EAAkBQ,EAAQE,OAC3B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,QAASF,EACtB,IACAG,SAAQ,WACPb,GAAa,GACbc,EAAAA,QAAAA,QACD,IACJ,GAAE,CAACtB,KAGF,gCACGO,GAAae,EAAAA,QAAAA,UACZf,IACA,2BACGF,EAAiB,IAChB,SAAC,EAAD,UACGF,EAAYoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,UAAC,EAAD,WAAU,WAASD,MACnB,uBAAIC,MAFGF,EADM,MAQD,IAAnBnB,IACC,SAAC,EAAD,UAAa,mDAMxB,C","sources":["api/getMovieReviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '0b46dbc328ca74a0ee97be896e4cf159';\n\nexport const getMovieReviews = movieId => {\n  return axios(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 40px;\n  padding-top: 20px;\n  li {\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 25px;\n`;\n\nexport const NoReviews = styled.p`\n  padding-top: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovieReviews';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport * as s from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [dataReviews, setDataReviews] = useState([]);\n  const [reviewsPerPage, setReviewsPerPage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setIsLoading(true);\n\n    getMovieReviews(movieId)\n      .then(({ data: { results } }) => {\n        setDataReviews([...results]);\n        setReviewsPerPage(results.length);\n      })\n      .catch(err => {\n        console.log('ERROR', err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        Loading.remove();\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && Loading.arrows()}\n      {!isLoading && (\n        <div>\n          {reviewsPerPage > 0 && (\n            <s.List>\n              {dataReviews.map(({ id, author, content }) => (\n                <li key={id}>\n                  <s.Author>Author: {author}</s.Author>\n                  <p>{content}</p>\n                </li>\n              ))}\n            </s.List>\n          )}\n          {reviewsPerPage === 0 && (\n            <s.NoReviews>We don`t have any reviews for this movie.</s.NoReviews>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["axios","List","styled","Author","NoReviews","movieId","useParams","useState","dataReviews","setDataReviews","reviewsPerPage","setReviewsPerPage","isLoading","setIsLoading","useEffect","params","api_key","getMovieReviews","then","results","data","length","catch","err","console","log","finally","Loading","map","id","author","content"],"sourceRoot":""}